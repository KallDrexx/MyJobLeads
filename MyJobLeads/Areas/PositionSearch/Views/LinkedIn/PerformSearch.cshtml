@model MyJobLeads.Areas.PositionSearch.Models.PerformedSearchViewModel

@{
    ViewBag.Title = "LinkedIn Job Search";
}

@section SideBar {
    @{Html.RenderAction(MVC.Home.SidebarDisplay(MyJobLeads.Controllers.ActiveSidebarLink.PositionSearch));}
}

@{Html.RenderPartial(MVC.PositionSearch.LinkedIn.Views._SearchForm, Model.SearchQuery);}

@if (Model.Results != null)
{
    string urlParams = string.Format("Keywords={0}&SelectedCountry={1}&PostalCode={2}",
                                        Url.Encode(Model.SearchQuery.Keywords),
                                        Url.Encode(Model.SearchQuery.SelectedCountryCode),
                                        Url.Encode(Model.SearchQuery.PostalCode));

    int firstResultCount = Model.Results.PageNum * Model.Results.PageSize + 1;
    int lastResultCount = firstResultCount + Model.Results.Results.Count - 1;
    
    int totalPages = Model.Results.TotalCount / Model.Results.PageSize;
    if (Model.Results.TotalCount % Model.Results.PageSize != 0) { totalPages++; }
    
    <div class="grid3 floatLeft">
        <div class="positionResultsHeader">
            @if (Model.Results.TotalCount == 0)
            {
                <h3>No Positions Found Matching Your Criteria</h3>
            }
            else
            {
                <h3>Found Positions (displaying @firstResultCount - @lastResultCount out of @Model.Results.TotalCount)</h3>
            }

            <ul class="positionSearchNotification">
                <li>Page @(Model.Results.TotalCount > 0 ? Model.Results.PageNum + 1 : 0) of @totalPages</li>

                @if (Model.Results.PageNum > 0)
                {
                    <li>
                        <a href="@Url.Action(MVC.PositionSearch.LinkedIn.PerformSearch())?@urlParams&pageNum=@(Model.Results.PageNum - 1)">
                            Previous Page
                        </a>
                    </li>
                }
                
                @if (Model.Results.PageNum < totalPages - 1)
                {
                    <li>
                        <a href="@Url.Action(MVC.PositionSearch.LinkedIn.PerformSearch())?@urlParams&pageNum=@(Model.Results.PageNum + 1)">
                            Next Page
                        </a>
                    </li>               
                }
            </ul>       
        </div>

        <div id="positionRole">
            <ul>
                @foreach (var position in Model.Results.Results)
                {
                    <li>
                        <a href="@Url.Action(MVC.PositionSearch.LinkedIn.PositionDetails(position.JobId))" title="View Position Details">
                            <div class="taskName">@position.Company</div>
                            <div class="positionSubHeading">@position.Location</div>
                            <div class="taskDescription">@position.Description...</div>
                        </a>
                    </li>
                }
            </ul>
        </div>

        <div class="lowerPositionResultsHeader">
            @if (Model.Results.TotalCount == 0)
            {
                <h3>No Positions Found Matching Your Criteria</h3>
            }
            else
            {
                <h3>Found Positions (displaying @firstResultCount - @lastResultCount out of @Model.Results.TotalCount)</h3>
            }

            <ul class="positionSearchNotification">
                <li>Page @(Model.Results.TotalCount > 0 ? Model.Results.PageNum + 1 : 0) of @totalPages</li>

                @if (Model.Results.PageNum > 0)
                {
                    <li>
                        <a href="@Url.Action(MVC.PositionSearch.LinkedIn.PerformSearch())?@urlParams&pageNum=@(Model.Results.PageNum - 1)">
                            Previous Page
                        </a>
                    </li>
                }
                
                @if (Model.Results.PageNum < totalPages - 1)
                {
                    <li>
                        <a href="@Url.Action(MVC.PositionSearch.LinkedIn.PerformSearch())?@urlParams&pageNum=@(Model.Results.PageNum + 1)">
                            Next Page
                        </a>
                    </li>               
                }
            </ul>       
        </div>
    </div>
}
