@model MyJobLeads.Areas.CompanySearch.Models.Jigsaw.CompanySearchQueryViewModel

@using (Html.PageInfoBox(false))
{
    using (Html.BeginForm(MVC.CompanySearch.Jigsaw.PerformSearch(), FormMethod.Get))
    {
        using (Html.OuterRow())
        {
            <h3>Jigsaw Company Search</h3>
        }

        using (Html.OuterRow())
        {
            using (Html.ValidationArea())
            {
                @Html.ValidationSummary()
            }
        }

        using (Html.OuterRow())
        {
            Html.FormField("Company Name", Html.TextBoxFor(x => x.CompanyName, new { @class = "info" }));
        }

        using (Html.OuterRow())
        {
            Html.FormField("Metro Area", Html.DropDownListFor(x => x.MetroArea, Model.MetroAreaList, new { @class = "info" }));
            Html.FormField("State", Html.DropDownListFor(x => x.State, Model.StateList, new { @class = "info" }));
        }

        using (Html.OuterRow())
        {
            Html.FormField("Industry", Html.DropDownListFor(x => x.Industry, Model.IndustryList));
            Html.FormField("Ownership", Html.DropDownListFor(x => x.Ownership, Model.OwnershipTypes, new { @class = "info" }));
        }

        using (Html.OuterRow())
        {
            Html.FormField("Revenue", Html.DropDownListFor(x => x.Revenue, Model.RevenueList, new { @class = "info" }));
            Html.FormField("Number of Employees", Html.DropDownListFor(x => x.Employees, Model.EmployeeList, new { @class = "info" }));
        }

        using (Html.OuterRow())
        {
            using (Html.FormButtonArea())
            {
                <input type="submit" value="Search" />
            }
        }
    }
}