@model MyJobLeads.DomainModel.ViewModels.CompanySearching.ExternalCompanyDetailsViewModel

@{
    ViewBag.Title = "Jigsaw Company Details";
}

@section SideBar {
    @{Html.RenderAction(MVC.Home.SidebarDisplay(MyJobLeads.Controllers.ActiveSidebarLink.ResearchCenter));}
}

@using (Html.PageInfoBox(false))
{
    using (Html.OuterRow())
    {
        if (ViewBag.MergeCompanyId == null)
        {
            @Html.ActionLink("Add To MyLeads", MVC.CompanySearch.Jigsaw.AddCompany(Convert.ToInt32(Model.CompanyId), Model.CompanyName),
                            new { @class = "floatRight blueLinks", title = "Add company to myleads" })
        }

        else
        {
            @Html.ActionLink("Sync With MyLeads Company", MVC.CompanySearch.Jigsaw.Sync((int)ViewBag.MergeCompanyId, Convert.ToInt32(Model.CompanyId)),
                            new { @class = "floatRight blueLinks", title = "Sync company with existing MyLeads company" })
        }
                         
        using (Html.ContentArea())
        {
            <h3>@Model.CompanyName</h3>
            <p>Last updated on <a href="http://@Model.SourceUrl" class="inlineBlue">Jigsaw</a> on @Model.LastUpdated.ToString("D")</p>
        }
    }

    using (Html.OuterRow())
    {
        using (Html.InnerColumn(true))
        {
            using (Html.FieldValueDisplay("Industries:"))
            {
                <br />
                if (!string.IsNullOrWhiteSpace(Model.Industry1))
                { <span>@Model.Industry1: @Model.SubIndustry1</span> <br /> }
                if (!string.IsNullOrWhiteSpace(Model.Industry2))
                { <span>@Model.Industry2: @Model.SubIndustry2</span> <br /> }
                if (!string.IsNullOrWhiteSpace(Model.Industry3))
                { <span>@Model.Industry3: @Model.SubIndustry3</span> <br /> }
            }

            using (Html.FieldValueDisplay("Revenue:"))
            { @string.Format("{0:C}", Model.Revenue) }
            using (Html.FieldValueDisplay("Employee Count:"))
            { @string.Format("{0:n0}", Model.EmployeeCount) }
            using (Html.FieldValueDisplay("Phone:"))
            { @Model.Phone }
        }

        using (Html.InnerColumn(false))
        {
            using (Html.FieldValueDisplay("Address:"))
            { 
                <br />
                @Model.Address <br />
                @:@Model.City, @Model.State @Model.Zip
            }

            using (Html.FieldValueDisplay("Ownership:"))
            { @Model.Ownership }
            using (Html.FieldValueDisplay("Website:"))
            { <a href="http://@Model.Website" class="inlineBlue">@Model.Website</a> }
        }
    }

    using (Html.OuterRow())
    {
        using (Html.FieldValueDisplay("Overview:"))
        {
            @Html.Raw(Model.Overview)
        }
    }
}