@model MyJobLeads.ViewModels.Tasks.EditTaskViewModel
@using Telerik.Web.Mvc.UI;

@{
    string editActionLabel;
    
    if (Model.Id == 0)
    {
        ViewBag.Title = "Add A Task";
    }
    else
    {
        ViewBag.Title = "Edit Your Task";
    }
}

@*

@{Html.Telerik().ScriptRegistrar().OnDocumentReady(
    @<text>
        // Upon contact selection change, update the contact sidebar summary
        $('#contactlist').change(function() {
            $.ajax({
                url: '/Contact/GetSummary/' + $(this).val(),
                success: function(html) {
                    $('#contactsummary').html(html);
                }
            });
        });
    </text>);
}*@

<div class="grid1 floatLeft"> 
    <div class="lineSeperater"> 
        <div class="pageInfoBox"> 
            @using (Html.BeginForm(MVC.Task.Edit()))
            {
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.AssociatedCompanyId)

                <div class="grid3 marginBottom_10 marginAuto floatLeft"> 
                        <h3 class="floatLeft">Edit  your Task</h3> 
                </div> 

                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Subject:</p>
                        <div class="infoSpan">@Html.TextBoxFor(x => x.Name, new { @class = "info" })</div>
                    </div> 

                    <div class="floatLeft"><p class="greyHighlight">Category:</p>
                        <div class="infoSpan">
                            @Html.DropDownListFor(x => x.Category, new SelectList(Model.AvailableCategoryList, Model.Category), new { @class = "info" })
                        </div>
                    </div> 
                </div> 

                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Associate with:</p>
                        <div class="infoSpan">
                            @Html.DropDownListFor(x => x.AssociatedContactId, Model.CompanyContactList, new { id = "contactlist", @class = "info"  })
                        </div>
                    </div> 

                    <div class="floatLeft"><p class="greyHighlight">Task Due Date:</p>
                        <div class="infoSpan">@Html.Telerik().DatePickerFor(x => x.TaskDate)</div>
                    </div> 
                </div> 
                
                if (Model.Id != 0)
                {
                    <div class="grid3 marginBottom_10 floatLeft">
                        <div class="floatLeft"><p class="greyHighlight">Task Completed?</p>
                            <div class="infoSpan">
                                @Html.CheckBoxFor(x => x.Completed)
                            </div>
                        </div>
                    </div>
                }
                
                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Notes:</p>
                        <div class="infoSpan">@Html.TextAreaFor(x => x.Notes, new { @class = "textAreaInfo" })</div>
                    </div> 
                </div> 
                
                
                <div class="grid3 marginBottom_20 floatLeft"> 
                    <div class="submitBTN ">
                        <input type="submit" value="Save" /> &nbsp;
                        @if (Model.Id != 0)
                        {
                            @Html.ActionLink("Cancel", MVC.Task.Details(Model.Id))
                        }
                        else
                        {
                            @Html.ActionLink("Cancel", MVC.Company.Details(Model.AssociatedCompanyId))
                        }
                    </div> 
                </div> 
            }
            <div class="clear"></div> 
        </div> 
    </div> 
</div> 

@if (Model.Contact != null && Model.Contact.Id != 0)
{
    Html.RenderPartial(MVC.Contact.Views._ContactSummaryDisplay, Model.Contact);
}

else
{
    Html.RenderPartial(MVC.Company.Views._CompanySummaryDisplay, Model.Company);
}   