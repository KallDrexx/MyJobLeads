@model EditTaskViewModel
@using MyJobLeads.ViewModels.Tasks;
@using MyJobLeads.ViewModels.Companies;
@using Telerik.Web.Mvc.UI;

@{
    string editActionLabel;
    
    if (Model.Id == 0)
    {
        ViewBag.Title = "Add Your Task";
        editActionLabel = "Add Your Task";
    }
    else
    {
        ViewBag.Title = "Edit Your Task";
        editActionLabel = "Edit Your Task";
    }
}

@*

@{Html.Telerik().ScriptRegistrar().OnDocumentReady(
    @<text>
        // Upon contact selection change, update the contact sidebar summary
        $('#contactlist').change(function() {
            $.ajax({
                url: '/Contact/GetSummary/' + $(this).val(),
                success: function(html) {
                    $('#contactsummary').html(html);
                }
            });
        });
    </text>);
}*@

@using (Html.BeginForm(MVC.Task.Edit(), FormMethod.Post, new { @class = "edit-form" }))
{
    <span class="form-header">@editActionLabel</span>
    
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.AssociatedCompanyId)

    <p>@Html.ValidationSummary()</p>
    
    <div class="form-row">
        <span class="form-label">Subject:</span>
        <span class="form-field">@Html.TextBoxFor(x => x.Name, new { size = 30 })</span>
    </div>
    
    <div class="form-row">
        <span class="form-label">Category:</span>
        <span class="form-field">@Html.DropDownListFor(x => x.Category, new SelectList(Model.AvailableCategoryList, Model.Category))</span>
    </div>
    
    <br /><br />
    
    <div class="form-row">
        <span class="form-label">Associate With:</span>
        <span class="form-field">@Html.DropDownListFor(x => x.AssociatedContactId, Model.CompanyContactList, new { id = "contactlist" })</span>
    </div>
    
    
    <div class="form-row">
        <span class="form-label">Task Due Date:</span>
        <span class="form-field">@Html.Telerik().DatePickerFor(x => x.TaskDate)</span>
    </div>
    
    @* Only show the completed checkbox if we are editing an existing task *@
    @if (Model.Id != 0)
    {
        <div class="form-row">
            <span class="form-label">Task Completed?</span>
            <span class="form-field">@Html.CheckBoxFor(x => x.Completed)</span>
        </div>
    }
    
    <div class="form-row">
        <span class="form-label">Notes:</span>
        <span class="form-field">@Html.TextAreaFor(x => x.Notes, 10, 75, null)</span>
    </div>
    
    <div class="form-row">
        <span class="form-label"></span>
        <span class="form-field">
            <input type="submit" value="Save" /> &nbsp; &nbsp;

            @if (Model.Id != 0)
            { 
                @Html.ActionLink("Back To Task", MVC.Task.Details(Model.Id));
            }
            else if (Model.AssociatedCompanyId != 0)
            { 
                @Html.ActionLink("Back To Company", MVC.Company.Details(Model.AssociatedCompanyId)) 
            }    
        </span>
    </div>        
}

<hr />
<br />

@if (Model.AssociatedContactId > 0)
{
    Html.RenderPartial(MVC.Contact.Views._ContactSidebarDisplay, Model.Contact);
}
else
{
    Html.RenderPartial(MVC.Company.Views._CompanySidebarDisplay, new CompanyDisplayViewModel(Model.Company));
}