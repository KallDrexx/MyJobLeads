@model EditTaskViewModel
@using MyJobLeads.ViewModels.Tasks;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Setup the sidebar
    string sidebar = "<div id=\"contactsummary\">";
    
    if (Model.Contact != null)
    {
        sidebar = Html.Partial(MVC.Contact.Views._ContactSidebarDisplay, Model.Contact).ToString();
    }

    sidebar = string.Concat(sidebar, "</div>", Html.Partial(MVC.Company.Views._CompanySidebarDisplay, Model.Company));
    ViewBag.Sidebar = new HtmlString(sidebar);
}

@if (Model.Id == 0)
{
    ViewBag.Title = "Add A Task";
    <h2>Add A New Task</h2>
    <div class="ScreenHint">This screen allows you to create a new task.</div>
}
else
{
    ViewBag.Title = "Editing " + @Model.Name;
    <h2>Editing @Model.Name</h2>
    <div class="ScreenHint">This screen allows you to edit the @Model.Name task.</div>
}

<br />

@{Html.Telerik().ScriptRegistrar().OnDocumentReady(
    @<text>
        // Upon contact selection change, update the contact sidebar summary
        $('#contactlist').change(function() {
            $.ajax({
                url: '/Contact/GetSummary/' + $(this).val(),
                success: function(html) {
                    $('#contactsummary').html(html);
                }
            });
        });
    </text>);
}

@using (Html.BeginForm(MVC.Task.Edit()))
{
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.AssociatedCompanyId)

    <table>
        <tr>
            <td align="right">Subject:</td>
            <td>@Html.TextBoxFor(x => x.Name, new { size = 30 })</td>
        </tr>

        <tr>
            <td align="right">Category:</td>
            <td>
                @Html.DropDownListFor(x => x.Category, new SelectList(Model.AvailableCategoryList, Model.Category))
            </td>
        </tr>

        <tr>
            <td align="right">Sub-Category:</td>
            <td>@Html.TextBoxFor(x => x.SubCategory, new { size = 30 })</td>
        </tr>

        <tr>
            <td align="right">Contact:</td>
            <td>
                @Html.DropDownListFor(x => x.AssociatedContactId, Model.CompanyContactList, new { id = "contactlist" })
            </td>
        </tr>

        <tr>
            <td align="right">Task Due Date:</td>
            <td>
                @Html.Telerik().DateTimePickerFor(x => x.TaskDate)
            </td>
        </tr>

        @* Only show the completed checkbox if we are editing an existing task *@
        @if (Model.Id != 0)
        {
            <tr>
                <td align="right">Task Completed?</td>
                <td>@Html.CheckBoxFor(x => x.Completed)</td>
            </tr>
        }
        
        <tr>
            <td></td>
            <td>
                <input type="submit" value="Save" /> &nbsp; &nbsp; 

                @if (Model.Id != 0) { @Html.ActionLink("Back To Task", MVC.Task.Details(Model.Id)); }
                else if (Model.AssociatedCompanyId != 0) { @Html.ActionLink("Back To Company", MVC.Company.Details(Model.AssociatedCompanyId)) }                
            </td>
        </tr>
    </table>
        
}

