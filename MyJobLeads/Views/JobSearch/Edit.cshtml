@model MyJobLeads.DomainModel.Entities.JobSearch

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isNewJobSearch = Model.Id == 0;
}

@using (Html.PageInfoBox(false))
{
    using (Html.BeginForm(MVC.JobSearch.Edit())) 
    {
        @Html.HiddenFor(x => x.Id)

        using (Html.OuterRow())
        {
            <h3 class="floatLeft">@(isNewJobSearch ? "Start Job Search" : "Edit Job Search")</h3> 
        }

        using (Html.OuterRow())
        {
            <div class="floatLeft">
                <p>
                    Your first step is to setup a job search. <br /><br />
                            
                    Interview Tools allows you to organize multiple job searches. Some uses of this are to
                    prganize your job search by year, such as "2011 Full Time Position", "2012 Internship Hunt", or "May 2012 Need Part-Time Job"
                    and to organize job search by function, such as "Sales and Marketing Opportunities" or "Engineering Job Search"
                </p>    
            </div>
        }

        using (Html.OuterRow())
        {
            <div class="floatLeft infoSpan">
                @Html.ValidationSummary()
            </div>
        }

        using (Html.OuterRow())
        {
            Html.FormField("Title:", Html.TextBoxFor(x => x.Name, new { @class = "info" }));
        }

        using (Html.OuterRow())
        {
            Html.FormField("Description:", @Html.TextAreaFor(x => x.Description, new { @class = "textAreaInfo" }));
        }

        using (Html.OuterRow())
        {
            using(Html.FormButtonArea())
            {
                <input type="submit" value="Save" />
            }
        }
    }
}