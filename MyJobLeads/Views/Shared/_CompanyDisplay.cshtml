@model Company
@using MyJobLeads.DomainModel.Entities; 

@{
    string contactString = Model.Contacts.Count == 1 ? "contact" : "contacts";
    string taskString = Model.Tasks.Count == 1 ? "task" : "tasks";
    
    // Form company location string
    bool citySpecified = !string.IsNullOrWhiteSpace(Model.City);
    bool stateSpecified = !string.IsNullOrWhiteSpace(Model.State);
    bool zipSpecified = !string.IsNullOrWhiteSpace(Model.Zip);
    
    string location = string.Empty;
    if (citySpecified && stateSpecified) { location = string.Concat(Model.City, ", ", Model.State, " "); }
    else if (citySpecified) { location  = Model.City + " "; }
    else if (stateSpecified) { location = Model.State + " "; }
    
    if (zipSpecified) { location += Model.Zip; }
}

 
@Html.ActionLink("Back To Job Search", MVC.JobSearch.Details(Model.JobSearch.Id))

<h1>@Model.Name</h1>
<div class="ScreenHint">This screen displays all information, contacts, and tasks for this company</div>
<br />

Phone: @Model.Phone <br />
Location: @location <br />
Notes: @Model.Notes <br />
<br />

@Html.ActionLink("Edit Company Details", MVC.Company.Edit(Model.Id))

<h2>Contacts</h2>
This company has @Model.Contacts.Count @contactString entered (@Html.ActionLink("Add", MVC.Contact.Add(Model.Id)))

<ul>
    @foreach (Contact contact in Model.Contacts.OrderBy(x => x.Name).ToArray())
    {
        <li>@Html.ActionLink(contact.Name, MVC.Contact.Details(contact.Id))</li>   
    }
</ul>

<h2>Tasks</h2>
This company has @Model.Tasks.Count @taskString entered (@Html.ActionLink("Add", MVC.Task.Add(Model.Id)))

<ul>
    @foreach (Task task in Model.Tasks)
    {
        <li>
            @Html.ActionLink(task.Name, MVC.Task.Details(task.Id)) - 

            @if (task.Completed) { <text>Completed </text> }
            else { <b>Not Completed</b> }

            @if (task.TaskDate != null && !task.Completed) { <text> - Due: @task.TaskDate.Value.ToString()</text> }
        </li>
    }
</ul>

