@model MyJobLeads.ViewModels.Contacts.ContactDisplayViewModel
@using MyJobLeads.Areas.ContactSearch.Models;

@{
    ViewBag.Title = "Contact: " + Model.Name;
}

<div class="grid1 floatLeft"> 
    <div class="lineSeperater"> 
        <div class="pageInfoBox">
            <div class="grid3 marginBottom_10 marginAuto floatLeft"> 
                <h3 class="floatLeft">Contact: @Model.Name</h3> 
                @Html.ActionLink("Edit Details", MVC.Contact.Edit(Model.Id), new { @class = "floatRight blueLinks", title = "Edit Details" })
                @Html.ActionLink("Add Task", MVC.Task.Add(Model.Company.Id, Model.Id), new { @class = "floatRight blueLinks", title = "Add task" })

                @{
                    string[] names = Model.Name.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
                    string firstname = names[0];
                    string lastname = string.Empty;
                    
                    if (names.Length > 1)
                    {
                        lastname = names[names.Length - 1];
                    }

                    string searchUrl = new JigsawSearchParametersViewModel
                    {
                        FirstName = firstname,
                        LastName = lastname,
                        Company = Model.Company.Name,
                        MergedContactId = Model.Id
                    }.GetSearchUrl();
                }

                <a href="@Url.Action(MVC.ContactSearch.Jigsaw.PerformSearch())?@searchUrl" class="floatRight blueLinks">Update From Internet</a>
            </div> 

            <div class="grid3 marginBottom_10 floatLeft"> 
                <div class="grid4 floatLeft"> 
                    <p class="greyHighlight">Title: <span class="setTask">@Model.Title</span></p> 
                    <p class="greyHighlight">Email: <span class="setTask">@Model.Email</span></p> 
                    <p class="greyHighlight">Assistant: <span class="setTask">@Model.Assistant</span></p> 
                    <p class="greyHighlight">Referred By: <span class="setTask">@Model.ReferredBy</span></p>
                </div> 

                <div class="grid4 floatRight"> 
                    <p class="greyHighlight">Direct Phone: <span class="setTask">@Model.DirectPhoneWithExtension</span></p> 
                    <p class="greyHighlight">Mobile Phone: <span class="setTask">@Model.MobilePhone</span></p> 
                </div> 
            </div> 
                                
            <div class="grid3 marginBottom_10 floatLeft"> 
                <div class="floatLeft">
                    <p class="greyHighlight">Notes: 
                        <span class="setTask">@Html.Raw(Html.Encode(Model.Notes).Replace(Environment.NewLine, "<br />"))</span>
                    </p>
                </div> 
            </div> 

            <div class="clear"></div>
        </div> 
    </div> 
</div>

@{Html.RenderPartial(MVC.Company.Views._CompanySummaryDisplay, Model.Company);}