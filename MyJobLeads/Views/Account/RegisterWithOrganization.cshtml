@model MyJobLeads.ViewModels.Accounts.OrganizationRegistrationViewModel

@{
    ViewBag.Title = "RegisterWithOrganization";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section SideBar {
    @{Html.RenderAction(MVC.Home.SidebarDisplay(MyJobLeads.Controllers.ActiveSidebarLink.Register));}
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<div class="grid1 floatLeft"> 
        <div class="pageInfoBox"> 
            @using (Html.BeginForm(MVC.Account.RegisterWithOrganization(Model.RegistrationToken)))
            {
                @Html.HiddenFor(x => x.RegistrationToken)
                @Html.HiddenFor(x => x.OrganizationName)
                @Html.HiddenFor(x => x.MinPasswordLength)
                @Html.HiddenFor(x => x.RestrictedEmailDomain)
                
                <div class="grid3 marginBottom_10 marginAuto floatLeft"> 
                    <h3 class="floatLeft">Register With The @Model.OrganizationName</h3> 
                </div> 
                
                <div class="grid3 marginBottom_10 marginAuto floatLeft">
                    <div class="floatLeft">
                        <p>
                            As a student of @Model.OrganizationName you are entitled to a free MyLeads account.
                        </p>    
                    </div>
                </div>
                
                if (!string.IsNullOrWhiteSpace(Model.RestrictedEmailDomain))
                {
                    <div class="grid3 marginBottom_10 marginAuto floatLeft">
                        <div class="floatLeft">
                            <p>
                                @Model.OrganizationName only allows students to sign up with an email address ending with: 
                                    <span class="greyHighlight">@@@Model.RestrictedEmailDomain</span>
                            </p>
                        </div>
                    </div>
                }
                
                <div class="grid3 marginBottom_10 marginAuto floatleft">
                    <div class="floatLeft infoSpan">
                        @Html.ValidationSummary()
                    </div>
                </div>
                
                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Full Name:</p>
                        <div class="infoSpan">@Html.TextBoxFor(x => x.FullName, new { @class = "info" })</div>
                    </div> 
                </div> 

                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Email Address:</p>
                        <div class="infoSpan">@Html.TextBoxFor(x => x.Email, new { @class = "info" })</div>
                    </div> 
                </div>
                
                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Password:</p>
                        <div class="infoSpan">@Html.PasswordFor(x => x.Password, new { @class = "info" })</div>
                    </div> 
                </div> 
                
                <div class="grid3 marginBottom_10 floatLeft"> 
                    <div class="floatLeft"><p class="greyHighlight">Confirm Password:</p>
                        <div class="infoSpan">@Html.PasswordFor(x => x.ConfirmPassword, new { @class = "info" })</div>
                    </div> 
                </div>

                <div class="grid3 marginBottom_20 floatLeft"> 
                    <div class="submitBTN "><input type="submit" value="Register" /></div>                    
                </div> 
            }

            <div class="clear"></div> 
        </div> 
</div>